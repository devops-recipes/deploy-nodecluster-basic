# Language setting http://docs.shippable.com/ci/languages/node/
language: node_js

# using pre-defined build variables
# full list http://docs.shippable.com/ci/advancedOptions/environmentVariables/
env:
  global:
    - TEST_RESULTS_DIR=$SHIPPABLE_REPO_DIR/shippable/testresults
    - CODE_COVERAGE_DIR=$SHIPPABLE_REPO_DIR/shippable/codecoverage
    - TESTS_LOC_DIR=$SHIPPABLE_REPO_DIR/tests
    - MOD_LOC=$SHIPPABLE_REPO_DIR/node_modules/.bin/

build:

  # http://docs.shippable.com/ci/shippableyml/#ci
  ci:
    # npm mirrors can sometimes be flaky, better to use shippable_retry
    # http://docs.shippable.com/ci/advancedOptions/retry/
    - shippable_retry npm install
    - mkdir -p $TEST_RESULTS_DIR && mkdir -p $CODE_COVERAGE_DIR
    - pushd $TESTS_LOC_DIR
    - $MOD_LOC/mocha --recursive "$TESTS_LOC_DIR/**/*.spec.js" -R mocha-junit-reporter --reporter-options mochaFile=$TEST_RESULTS_DIR/testresults.xml
    - $MOD_LOC/istanbul --include-all-sources cover -root "$SHIPPABLE_REPO_DIR/routes" $SHIPPABLE_REPO_DIR/node_modules/mocha/bin/_mocha -- -R spec-xunit-file --recursive "$TESTS_LOC_DIR/**/*.spec.js"
    - $MOD_LOC/istanbul report cobertura --dir $CODE_COVERAGE_DIR
    - popd

  # http://docs.shippable.com/ci/shippableyml/#post_ci
  post_ci:
    - if [ $IS_PULL_REQUEST == "false" ] ; then shipctl put_resource_state  deploy-nodecluster-gitRepo-repo "versionName" $(shipctl get_resource_version_name deploy-nodecluster-basic_ciRepo); fi;
    - if [ $IS_PULL_REQUEST == "false" ] ; then jq -M --argfile ciRepo $DEPLOYNODECLUSTERBASIC_CIREPO_PATH/version.json '.version.propertyBag.shaData = $ciRepo.version.propertyBag.shaData' $DEPLOYNODECLUSTERGITREPOREPO_PATH/version.json > tmp.json && mv tmp.json $DEPLOYNODECLUSTERGITREPOREPO_PATH/version.json; fi;

resources:
  - name: deploy-nodecluster-gitRepo-cluster
    type: cluster
    flags:
      - deploy-nodecluster-gitRepo
    integration: dr-nc

  - name: deploy-nodecluster-gitRepo-repo
    type: gitRepo
    flags:
      - deploy-nodecluster-gitRepo
    integration: github
    versionTemplate:
      sourceName: devops-recipes/deploy-nodecluster-basic
      branch: gitRepo # This will create the first version for the gitRepo branch
      buildOnCommit: false # We don't want to automatically update this resource

jobs:
  - name: deploy-nodecluster-basic_runCI
    type: runCI
    flags:
      - deploy-nodecluster-gitRepo
    steps:
      - OUT: deploy-nodecluster-gitRepo-repo

  - name: deploy-nodecluster-gitRepo-deploy
    type: deploy
    flags:
      - deploy-nodecluster-gitRepo
    steps:
      - IN: deploy-nodecluster-gitRepo-repo
      - IN: deploy-nodecluster-gitRepo-cluster
      - TASK:
        - script: forever stopall
        - script: rm -r ~/deploy-nodecluster-gitRepo-repo
        - script: mv /tmp/shippable/deploy-nodecluster-gitRepo-repo/gitRepo ~/deploy-nodecluster-gitRepo-repo
        - script: cd ~/deploy-nodecluster-gitRepo-repo
        - script: npm install
        - script: PORT=8888 ENVIRONMENT=nodeCluster forever start ./bin/www
